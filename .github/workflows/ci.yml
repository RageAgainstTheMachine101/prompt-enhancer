name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build extension
        run: npm run build
      
      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la dist/
          test -f dist/manifest.json || exit 1
          test -d dist/src/background || exit 1
          test -d dist/src/content || exit 1
          test -d dist/src/popup || exit 1
          echo "✅ Build verification passed!"
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          name: extension-build
          path: dist/
          retention-days: 7

  validate-manifest:
    name: Validate Manifest
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Validate manifest.json
        run: |
          echo "Validating manifest.json..."
          # Check if manifest.json is valid JSON
          python3 -m json.tool manifest.json > /dev/null
          echo "✅ Manifest JSON is valid"
          
          # Check for required fields
          required_fields=("manifest_version" "name" "version")
          for field in "${required_fields[@]}"; do
            if ! grep -q "\"$field\"" manifest.json; then
              echo "❌ Missing required field: $field"
              exit 1
            fi
          done
          echo "✅ All required fields present"
